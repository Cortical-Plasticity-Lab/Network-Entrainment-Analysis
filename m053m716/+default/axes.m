function [ax,x_txt_obj,y_txt_obj,title_txt_obj] = axes(fig,varargin)
%AXES Return default axes object handle
%
%  ax = default.axes(); % -> Sets ax using fig = default.fig()
%  ax = default.axes(fig);
%  [ax,x_txt_obj,y_txt_obj,title_txt_obj] = default.axes(__,'Name',value,...);
%
% Inputs
%  name     - Name of figure ('Name' figure property)
%  varargin - 'Name',value keyword argument pairs for Matlab axes builtin
%                 
% Output
%  ax        - Formatted Matlab axes handle
%  x_txt_obj - XLabel object
%  y_txt_obj - YLabel object
%  title     - Title object
%
% See also: Contents, matlab.graphics.axis.Axes

if nargin < 1
   fig = default.figure();
elseif ~isa(fig,'matlab.ui.Figure')
   if isa(fig,'matlab.graphics.axis.Axes')
      ax = fig; % For existing axes, do not change Label Strings or Position
      [~,varargin] = parseInputs(varargin{:});
      set(ax,'NextPlot','add',...
         'Units','Normalized',...
         'XColor','k',...
         'YColor','k',...
         'XLim',[0 1],...
         'XLimMode','auto',...
         'YLim',[0 1],...
         'YLimMode','auto',...
         'TickDir','both',...
         'LineWidth',1.5,...
         'FontName','Arial',...
         'FontSize',13,...
         varargin{:});
      [x_txt_obj,y_txt_obj,title_txt_obj] = updateLabels(ax);
      return;
   end
   varargin = [fig, varargin];
   fig = gcf;
end

[pars,varargin] = parseInputs(varargin{:});

ax = axes(fig,...
   'NextPlot','add',...
   'Units','Normalized',...
   'Position',[pars.X  pars.Y  pars.Width  pars.Height],...
   'XColor','k',...
   'YColor','k',...
   'XLim',[0 1],...
   'XLimMode','auto',...
   'YLim',[0 1],...
   'YLimMode','auto',...
   'TickDir','both',...
   'LineWidth',1.5,...
   'FontName','Arial',...
   'FontSize',13,...
   varargin{:});
[x_txt_obj,y_txt_obj,title_txt_obj] = updateLabels(ax,pars);

   function [x_txt_obj,y_txt_obj,title_txt_obj] = updateLabels(ax,pars)
      x_txt_obj = ax.XLabel;
      y_txt_obj = ax.YLabel;
      title_txt_obj = ax.Title;
      if nargin > 1
         set(x_txt_obj,'String',pars.XLabel,'FontName','Arial','FontSize',15,...
            'Color','k','FontWeight','bold',...
            'BackgroundColor',get(ax.Parent,'Color'));
         set(y_txt_obj,'String',pars.YLabel,'FontName','Arial','FontSize',15,...
            'Color','k','FontWeight','bold',...
            'BackgroundColor',get(ax.Parent,'Color'));
         set(title_txt_obj,'String',pars.Title,'FontName','Arial','FontSize',18,...
            'Color','k','FontWeight','bold',...
            'BackgroundColor',get(ax.Parent,'Color'));
      else
         set(x_txt_obj,'FontName','Arial','FontSize',15,...
            'Color','k','FontWeight','bold',...
            'BackgroundColor',get(ax.Parent,'Color'));
         set(y_txt_obj,'FontName','Arial','FontSize',15,...
            'Color','k','FontWeight','bold',...
            'BackgroundColor',get(ax.Parent,'Color'));
         set(title_txt_obj,'FontName','Arial','FontSize',18,...
            'Color','k','FontWeight','bold',...
            'BackgroundColor',get(ax.Parent,'Color'));
      end
   end

   function [pars,varargin] = parseInputs(varargin)
      %PARSEINPUTS Handle parsing of optional inputs for Axes labels
      %
      %  [pars,varargin] = parseInputs(varargin);
      pars = struct;
      pars.Height = 0.70;
      pars.Width = 0.75;
      pars.X = 0.20; % X-position
      pars.XLabel = 'Untitled-X';
      pars.Y = 0.20; % Y-position
      pars.YLabel = 'Untitled-Y';
      pars.Title  = 'Untitled';
      fn = fieldnames(pars);
      rmVec = [];
      for iArg = 1:2:numel(varargin)
         idx = strcmpi(fn,varargin{iArg});
         if sum(idx) == 1
            pars.(fn{idx}) = varargin{iArg+1};
            rmVec = [rmVec, iArg, iArg+1]; %#ok<AGROW>
         end
      end
      varargin(rmVec) = [];
   end

end